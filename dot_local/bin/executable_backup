#!/bin/sh

# A simple script to easily backup and restore

MOUNT=/mnt/
SOURCES=(
  # "Music"
	"Pictures"
	"Documents"
	"Videos"
	# "Downloads/ISO"
)
LOCAL_ISMOUNTED=$(mount | grep sdc)
CLOUD_MOUNT=sync_g_drive:
CLOUD_ISMOUNTED=$(rclone listremotes | grep $CLOUD_MOUNT)

local_sync() {
	for SOURCE in "${SOURCES[@]}"; do
		# Re configured files to delete as well
    # -a = archive mode
    # -u = skip files that are newer on the receiver
    # -A = preserve ACLs
    # -X = preserve extended attributes
    # -v = print the version + other info and exit
    # -P = Progress bar
		# rsync -auAXvP "$FROM$SOURCE" "$TO"
    rclone copy -PL "$FROM$SOURCE" "$TO$SOURCE"
	done

}

cloud_sync(){
	for SOURCE in "${SOURCES[@]}"; do
   rclone sync -PL "$FROM$SOURCE" "$CLOUD_MOUNT$SOURCE/"
	done
}

local_run() {

	if [ "$LOCAL_ISMOUNTED" != '' ]; then
		local_sync
	else
		echo "Drive is not mounted"
	fi
}

cloud_run() {

	if [ "$CLOUD_ISMOUNTED" != '' ]; then
		cloud_sync
	else
		echo "Drive is not mounted"
	fi
}

if [ "$1" = 'local_restore' ]; then

	FROM="$MOUNT"
	TO="$HOME/"
	echo "Restoring data"
    local_run
elif [ "$1" = 'local_backup' ]; then

	FROM="$HOME/"
	TO="$MOUNT"
	echo "Backuping data"
    local_run
elif [ "$1" = 'cloud_restore' ]; then

	FROM="$CLOUD_MOUNT"
	TO="$HOME/"
	echo "Restoring data"
    cloud_run
elif [ "$1" = 'cloud_backup' ]; then

	FROM="$HOME/"
	TO="$CLOUD_MOUNT"
	echo "Backuping data"
    cloud_run
else
	echo "Command is incorrect"
fi
